!function(t,e){"use strict";t.t$=function(t,e){function s(e){if(!("ontouchstart"in t))return console.log("Sorry. Your browser does not support Tap or Swipe."),{addEventListener:function(){console.log("Sorry. Your browser does not support TinyShell.")},removeTarget:function(){console.log("Sorry. Your browser does not support TinyShell.")},addTarget:function(){console.log("Sorry. Your browser does not support TinyShell.")}};console.log("TinyShell is supported");var s=[];s=e.length?Array.from(e):[e],this.Params={targets:s,startX:0,startY:0,moved:!1,duration:0,maxSwipeTime:200,minDistance:25,maxDistance:10,hasTouchListeners:!1},this.Events={swipeleft:new CustomEvent("swipeleft",{detail:{dir:"left",touches:1,callback:null}}),swiperight:new CustomEvent("swiperight",{detail:{dir:"right",touches:1,callback:null}}),tap:new CustomEvent("tap",{detail:{touches:1,callback:null}})}}return s.EventTypes={SWIPELEFT:"swipeleft",SWIPERIGHT:"swiperight",TAP:"tap"},s.prototype.addEventListener=function(t,e){this.Events[t].detail.callback=e,console.log("Added listener for",t,"to call",e.name),this.Params.targets.forEach(function(e){e.addEventListener(t,this),e.addEventListener("touchstart",this),e.addEventListener("touchend",this),e.addEventListener("touchcancel",this)}.bind(this))},s.prototype.removeTarget=function(t){try{t.removeEventListener("swipeleft",this)}catch(t){console.log("there was no swipeleft to remove")}try{t.removeEventListener("swiperight",this)}catch(t){console.log("there was no swiperight to remove")}try{t.removeEventListener("tap",this)}catch(t){console.log("there was no tap to remove")}t.removeEventListener("touchstart",this),t.removeEventListener("touchend",this),t.removeEventListener("touchcancel",this),console.log("Events removed for",t),this.Params.targets.filter(function(e){return!e===t})},s.prototype.addTarget=function(t,e){var s;s=Array.isArray(e)?Array.from(e):[e],this.Params.targets.push(t),s.forEach(function(e){t.addEventListener(e,this)}),t.addEventListener("touchstart",this),t.addEventListener("touchend",this),t.addEventListener("touchcancel",this)},s.prototype.start=function(t){var e=t.changedTouches;this.Events.tap.detail.touches=e.length,this.Events.swipeleft.detail.touches=e.length,this.Events.swiperight.detail.touches=e.length,this.Params.startX=e[0].pageX,this.Params.startY=e[0].pageY,performance.mark("start")},s.prototype.end=function(t){var e=t.changedTouches;if(1==e.length){performance.mark("end"),performance.measure("touching","start","end");var s,a=performance.getEntriesByName("touching","measure")[0].duration,n=Math.max(this.Params.startX,e[0].pageX)-Math.min(this.Params.startX,e[0].pageX),r=Math.max(e[0].pageY,this.Params.startY)-Math.min(e[0].pageY,this.Params.startY);if(s=Math.max(this.Params.startX,e[0].pageX)==this.Params.startX?"left":"right",null!==this.Events.tap.detail.callback&&"function"==typeof this.Events.tap.detail.callback&&n<this.Params.maxDistance&&r<this.Params.maxDistance)return void t.currentTarget.dispatchEvent(this.Events.tap);"left"==s&&null!==this.Events.swipeleft.detail.callback&&"function"==typeof this.Events.swipeleft.detail.callback&&(n>this.Params.minDistance&&a<this.Params.maxSwipeTime&&n>r?(console.log("Successful swipeleft"),t.currentTarget.dispatchEvent(this.Events.swipeleft)):console.log("Invalid swipeleft",n,a)),"right"==s&&null!==this.Events.swiperight.detail.callback&&"function"==typeof this.Events.swiperight.detail.callback&&(n>this.Params.minDistance&&a<this.Params.maxSwipeTime&&n>r?(console.log("Successful swiperight"),t.currentTarget.dispatchEvent(this.Events.swiperight)):console.log("Invalid swiperight"))}},s.prototype.cancel=function(t){console.log("cancel"),performance.clearMarks("start")},s.prototype.clear=function(t,e){console.log("clear"),this.Events[t].detail.callback=null,this.Params.targets.forEach(function(s){s.removeEventListener(t,e),s.removeEventListener("touchstart",this.start),s.removeEventListener("touchend",this.end),s.removeEventListener("touchcancel",this.cancel)}.bind(this)),this.Params.hasTouchListeners=!1,this.Params.targets=[]},s.prototype.handleEvent=function(t){switch(console.log("handling",t.type),t.type){case"swipeleft":case"swiperight":case"tap":1==t.detail.touches?this.Events[t.type].detail.callback.call(this,t):console.log("Wrong number of touch points",t.detail.touches);break;case"touchstart":this.start(t);break;case"touchend":this.end(t);break;case"touchcancel":this.cancel(t)}},s}(t,t.document)}(window);